00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000020 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000024 00000008 B CTRPluginFramework::Renderer::_rendererContext
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700133c 00000314 T CTRPluginFramework::VoiceChatClient(CTRPluginFramework::MenuEntry*)
07001650 00000180 T CTRPluginFramework::VoiceChatServer(CTRPluginFramework::MenuEntry*)
070017d0 00000054 T LED::Play(RGBLedPattern)
07001824 00000040 T LED::Init()
07001864 00000080 T LED::SwitchLEDPattern(RGBLedPattern)
070018e4 00000078 T LED::StopLEDPattern()
07001960 00000458 T LED::GeneratePattern(LED_Color, LED_PatType, float, float, unsigned char, float, float, float)
07001db8 00000018 t __tcf_0
07001dd0 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07001e54 00000028 T CTRPluginFramework::SetCustomTheme()
07001e7c 00000128 T CTRPluginFramework::InitMenu(CTRPluginFramework::PluginMenu&)
07001fa4 000000b0 T CTRPluginFramework::main()
07002054 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07002138 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
07002318 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
0700231c T svcCustomBackdoor
07002324 T svcConvertVAToPA
0700232c T svcFlushDataCacheRange
07002334 T svcInvalidateEntireInstructionCache
0700233c T svcMapProcessMemoryEx
07002350 T svcUnmapProcessMemoryEx
07002358 T svcControlMemoryUnsafe
0700236c T svcControlProcess
07002374 0000023c t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
070025b0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07002608 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
0700261c 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07002644 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
07002660 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
07002688 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned int)
070026b0 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0700275c 000000f8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07002854 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070028e4 00000280 T CTRPluginFramework::Screenshot::UpdateFileCount()
07002b64 00000048 T CTRPluginFramework::Screenshot::Initialize()
07002bac 00000374 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07002f20 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07002fb0 00000300 T CTRPluginFramework::Screenshot::TaskCallback(void*)
070032b0 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
070032ec 000000d4 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
070033c0 000000ac T CTRPluginFramework::SystemImpl::Initialize()
0700346c 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
070034bc 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
070034d4 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
070034f0 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
0700352c 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
0700354c 00000044 T CTRPluginFramework::SystemImpl::Status()
07003590 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
070035b4 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
070035b4 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07003624 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
07003724 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
07003774 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
07003854 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
070038b0 00000028 T CTRPluginFramework::ScreenImpl::Release()
070038d8 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07003948 00000040 T CTRPluginFramework::ScreenImpl::Flush()
07003988 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
07003a20 00000044 T CTRPluginFramework::ScreenImpl::Copy()
07003a64 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
07003b30 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07003b38 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
07003b98 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
07003be8 0000003c T CTRPluginFramework::ScreenImpl::Clean()
07003c24 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
07003cb0 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
07003d20 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
07003d50 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
07003db0 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
07003dc4 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
07003de0 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
07003dfc 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
07003e04 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
07003e0c 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
07003e14 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
07003e30 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
07003e4c 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
07003ea0 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
07003ecc 00000058 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
07003f24 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07003f80 00000044 T CTRPluginFramework::Search::UpdateProgress()
07003fc4 00000048 T CTRPluginFramework::Search::Cancel()
0700400c 00000184 T CTRPluginFramework::Search::CheckNextRegion()
07004190 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070041e8 0000015c W std::__cxx11::to_string(unsigned long)
07004344 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070043c4 00000008 T CTRPluginFramework::Search::GetHeader() const
070043cc 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07004414 0000000c T CTRPluginFramework::Search::GetType() const
07004420 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07004438 00000070 T CTRPluginFramework::Search::WriteHeader()
070044a8 00000058 T CTRPluginFramework::Search::WriteResults()
07004500 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
07004548 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07004548 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070045a8 000000ec W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
07004694 00000084 T CTRPluginFramework::Search::CreateIndexTable()
07004718 0000013c T CTRPluginFramework::Search::ExecuteSearch()
07004854 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
070048cc 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07004900 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004900 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004af0 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int)
07004b3c 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07004b3c 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07004d8c 0000022c T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
07004fb8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07005010 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07005010 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0700505c 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0700510c 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
0700510c 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
070051c8 00000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
07005260 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07005350 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070053d0 00000360 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07005730 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0700586c 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07005894 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
070058f0 000000b4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
070059a4 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
070059d4 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
07005a24 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07005a7c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07005ae8 00000280 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
07005d68 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
07006094 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
0700609c 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
070060b0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07006108 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07006108 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07006138 00000020 W CTRPluginFramework::MenuItem::~MenuItem()
07006158 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07006158 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07006180 00000020 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
070061a0 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
070061a8 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
070061bc 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
070061c8 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
070061d0 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
070061f4 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
07006224 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
07006240 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
070062a8 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006328 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07006328 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07006414 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07006414 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07006504 00000204 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
07006708 00000024 t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
0700672c 00000064 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07006790 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
070067f4 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070067f4 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07006830 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07006968 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07006ae4 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
07006b3c 00000194 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07006cd0 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07006ce8 000000e8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
07006dd0 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07006f90 000000e8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07007078 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07007238 000000e8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07007320 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
070073a8 00000170 t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07007518 00000020 t __tcf_1
07007538 000001ec t CTRPluginFramework::Vector<int>& std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&) [clone .isra.0]
07007724 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
070078c8 00000114 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
070079dc 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07007a70 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07007b14 000002b8 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07007dcc 00000050 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07007e1c 00000104 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07007f20 0000003c t CTRPluginFramework::Line<int>& std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&) [clone .isra.0]
07007f60 0000069c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
070085fc 00000198 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07008794 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07008818 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07008998 000001f4 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07008b8c 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07008c2c 000001ec T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07008e18 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
07008e48 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07008e48 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07008f04 00000028 T CTRPluginFramework::Window::~Window()
07008f04 00000028 T CTRPluginFramework::Window::~Window()
07008f2c 00000064 T CTRPluginFramework::Window::Draw() const
07008f90 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700906c 00000018 T CTRPluginFramework::Window::DrawButton() const
07009084 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0700909c 00000018 T CTRPluginFramework::Window::MustClose() const
070090b4 00000028 T CTRPluginFramework::Window::Close() const
070090dc 00000004 T CTRPluginFramework::Window::GetRect() const
070090e0 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
07009114 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
07009194 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
070091b4 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
070091d4 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
070091f4 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
07009220 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07009254 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700927c 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
070092a4 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
070092c4 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
070092f4 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700933c 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07009380 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
070094c4 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
070094f0 00000074 W CTRPluginFramework::Rect<int>::Contains(int, int) const
07009564 00000040 t __tls_init
07009564 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
070095a4 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
070095f0 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700968c 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07009720 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
070097d0 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700988c 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
07009944 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
0700996c 00000038 W CTRPluginFramework::File::~File()
0700996c 00000038 W CTRPluginFramework::File::~File()
070099a4 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
070099c8 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
070099ec 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
070099ec 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07009a24 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07009a2c 00000008 T CTRPluginFramework::BMPImage::Width() const
07009a34 00000008 T CTRPluginFramework::BMPImage::Height() const
07009a3c 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
07009a44 00000010 T CTRPluginFramework::BMPImage::data() const
07009a54 0000001c T CTRPluginFramework::BMPImage::end() const
07009a70 00000014 W CTRPluginFramework::BMPImage::DataClear()
07009a84 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07009a84 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07009b10 00000034 T CTRPluginFramework::BMPImage::Unload()
07009b44 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07009b8c 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07009bbc 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07009c8c 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
07009cf8 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07009d1c 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07009e38 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07009e38 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07009e8c 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
07009e8c 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
07009efc 000001dc T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700a0d8 0000012c T CTRPluginFramework::BMPImage::OptimiseForRendering()
0700a204 000000d4 T CTRPluginFramework::BMPImage::Draw(int, int)
0700a2d8 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
0700a2e0 000000fc T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0700a3dc 00000318 T CTRPluginFramework::BMPImage::_LoadBitmap()
0700a6f4 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a6f4 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a7a4 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0700a7f0 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0700aab8 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0700ab7c 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
0700acc8 0000015c T CTRPluginFramework::Button::Draw()
0700ae24 00000070 T CTRPluginFramework::Button::operator()()
0700ae94 00000184 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
0700b018 00000038 T CTRPluginFramework::Button::~Button()
0700b018 00000038 T CTRPluginFramework::Button::~Button()
0700b050 00000020 T CTRPluginFramework::Button::~Button()
0700b070 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0700b070 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0700b204 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0700b204 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0700b224 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0700b224 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0700b2bc 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0700b2bc 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0700b2d0 00000018 T CTRPluginFramework::Button::Enable(bool)
0700b2e8 00000010 T CTRPluginFramework::Button::Enable()
0700b2f8 00000010 T CTRPluginFramework::Button::Disable()
0700b308 00000010 T CTRPluginFramework::Button::Lock()
0700b318 00000010 T CTRPluginFramework::Button::Execute()
0700b328 00000018 T CTRPluginFramework::Button::SetState(bool)
0700b340 00000010 T CTRPluginFramework::Button::GetState() const
0700b350 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
0700b358 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
0700b3ec 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
0700b450 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
0700b4fc 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
0700b52c 00000010 t void std::__advance<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, int>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >&, int, std::random_access_iterator_tag) [clone .isra.0]
0700b53c 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
0700b6a8 00000058 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
0700b700 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700b700 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700b830 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
0700b910 000000d0 T CTRPluginFramework::InstallOSD()
0700b9e0 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
0700ba8c 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
0700ba8c 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
0700bab4 000000b4 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0700bb68 000001a4 T CTRPluginFramework::OSDImpl::Update()
0700bd0c 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
0700bd64 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
0700be2c 000005e0 T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
0700c40c 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0700c498 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0700c52c 00000070 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0700c59c 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700c6c8 0000011c T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700c7e4 000001a4 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0700c988 000001c8 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0700cb50 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0700cbb4 00000238 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
0700cdec 000005a8 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
0700d394 00000484 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
0700d818 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0700d88c 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0700d8fc 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700d954 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
0700d980 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0700da88 000000f4 T CTRPluginFramework::Preferences::LoadBackgrounds()
0700db7c 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
0700dbdc 00000004 T CTRPluginFramework::Preferences::Initialize()
0700dbe0 00000214 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
0700ddf4 000000bc T CTRPluginFramework::Preferences::LoadSettings()
0700deb0 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700df0c 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0700dfc8 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0700e084 00000158 T CTRPluginFramework::Preferences::WriteSettings()
0700e1dc 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0700e26c 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700e314 0000020c t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0700e520 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700e5c8 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700e5f4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700e64c 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0700e68c 000000bc T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700e748 00000054 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700e79c 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0700e7d4 0000005c T CTRPluginFramework::InitializeRandomEngine()
0700e830 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0700e8b0 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700e90c 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700e950 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700e9ac 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700ea2c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ea3c 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ea98 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0700eae8 000000dc T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned short const*)
0700ebc4 0000029c t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700ee60 00000104 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0700ef64 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0700ef98 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700f0d4 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700f0d4 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700f124 00000024 W std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> >::_M_dispose()
0700f148 00000700 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700f848 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700f850 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700f894 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
0700f95c 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0700f9b0 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700fa30 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700fa4c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700faa4 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0700fac0 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0700fb20 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0700fb7c 00000024 T CTRPluginFramework::ResetColor[abi:cxx11]()
0700fba0 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700fbb4 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700fbc8 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700fccc 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700fd24 00000078 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.0]
0700fd9c 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
0700fde0 00000048 T CTRPluginFramework::Directory::Close() const
0700fe28 00000008 T CTRPluginFramework::Directory::IsOpen() const
0700fe30 00000040 T CTRPluginFramework::Directory::Directory()
0700fe30 00000040 T CTRPluginFramework::Directory::Directory()
0700fe70 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700fe70 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700fe98 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
0700fecc 0000007c T CTRPluginFramework::Directory::~Directory()
0700fecc 0000007c T CTRPluginFramework::Directory::~Directory()
0700ff48 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0700ffa8 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
0700ffa8 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
0700fff4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700fff4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07010060 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07010074 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701010c 000000a4 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070101b0 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07010284 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07010318 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070103c4 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
070103d0 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07010460 00000118 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07010578 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070105b4 000000dc T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07010690 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070107dc 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070107dc 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07010834 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07010834 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07010850 0000011c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0701096c 00000084 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
070109f0 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07010a58 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07010b0c 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07010b50 000001ec t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07010d3c 00000288 T CTRPluginFramework::Directory::_List() const
07010fc4 000000d4 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07011098 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07011174 0000000c T CTRPluginFramework::FwkSettings::Get()
07011180 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
0701124c 00000010 T CTRPluginFramework::Process::GetHandle()
0701125c 00000010 T CTRPluginFramework::Process::GetTitleID()
0701126c 00000024 T CTRPluginFramework::Process::GetTextSize()
07011290 00000008 T CTRPluginFramework::Process::Pause()
07011298 00000010 T CTRPluginFramework::Process::Play(unsigned long)
070112a8 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07011350 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
07011354 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
070113a0 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070113c0 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
070113e0 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07011400 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
07011424 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
070114dc 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07011538 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07011570 0000000c T CTRPluginFramework::HookContext::GetCurrent()
0701157c 00000028 T CTRPluginFramework::HookContext::GetCallCode()
070115a4 00000048 T CTRPluginFramework::Hook::Hook()
070115a4 00000048 T CTRPluginFramework::Hook::Hook()
070115ec 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
070115ec 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07011614 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07011614 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07011628 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
0701168c 00000050 T CTRPluginFramework::Hook::~Hook()
0701168c 00000050 T CTRPluginFramework::Hook::~Hook()
070116dc 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
070116f8 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
07011720 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
07011730 0000001c T CTRPluginFramework::Hook::IsEnabled()
0701174c 00000120 T CTRPluginFramework::Hook::Enable()
0701186c 00000030 T CTRPluginFramework::Hook::Disable()
0701189c 00000008 T CTRPluginFramework::Hook::GetContext() const
070118a4 00000010 T CTRPluginFramework::System::IsNew3DS()
070118b4 00000010 T CTRPluginFramework::System::Reboot()
070118c4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701191c 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
070119d8 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
07011acc 000000d8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07011ba4 00000008 T CTRPluginFramework::File::Tell() const
07011bac 0000002c T CTRPluginFramework::File::Rewind() const
07011bd8 00000030 T CTRPluginFramework::File::Flush() const
07011c08 00000064 T CTRPluginFramework::File::GetSize() const
07011c6c 00000008 T CTRPluginFramework::File::IsOpen() const
07011c74 00000044 T CTRPluginFramework::File::File()
07011c74 00000044 T CTRPluginFramework::File::File()
07011cb8 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
07011d30 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07011d44 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011dd8 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011eac 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011f30 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011fd0 000000a8 T CTRPluginFramework::File::Close() const
07012078 0000017c T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
070121f4 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
070121f4 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07012250 0000009c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070122ec 00000028 T CTRPluginFramework::Touch::IsDown()
07012314 00000028 T CTRPluginFramework::Touch::GetPosition()
0701233c 00000018 T CTRPluginFramework::Clock::Clock()
0701233c 00000018 T CTRPluginFramework::Clock::Clock()
07012354 0000002c T CTRPluginFramework::Clock::GetElapsedTime() const
07012380 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
070123b8 00000034 T CTRPluginFramework::Clock::Restart()
070123ec 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
070123ec 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
070123f0 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
070123f4 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
07012424 00000018 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0701243c 00000008 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
07012444 000000ac W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
070124f0 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
07012524 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07012524 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
070125d0 00000048 T CTRPluginFramework::Task::Start() const
07012618 0000004c T CTRPluginFramework::Task::Start(void*) const
07012664 00000064 T CTRPluginFramework::Task::Wait() const
070126c8 0000003c T CTRPluginFramework::Controller::Update()
07012704 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07012708 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07012708 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
0701277c 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07012790 00000004 T CTRPluginFramework::PluginMenu::operator+=(CTRPluginFramework::MenuFolder const*) const
07012794 00000048 T CTRPluginFramework::PluginMenu::Run() const
070127dc 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
070127e4 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
070127f4 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07012800 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07012800 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07012830 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07012830 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07012848 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012848 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012888 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07012888 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070128b0 00000020 T CTRPluginFramework::MenuFolder::operator+=(CTRPluginFramework::MenuEntry const*)
070128d0 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070128d0 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701291c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0701291c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0701294c 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07012954 00000038 W CTRPluginFramework::TextBox::~TextBox()
07012954 00000038 W CTRPluginFramework::TextBox::~TextBox()
0701298c 00000020 W CTRPluginFramework::TextBox::~TextBox()
070129ac 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070129ac 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070129f4 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070129f4 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07012a30 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
07012a30 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
07012a70 00000008 T CTRPluginFramework::MessageBox::operator()() const
07012a78 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07012ad0 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07012b90 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012b90 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012bd8 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07012bd8 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07012c44 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
07012c44 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
07012c74 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07012c7c 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07012c98 00000044 T CTRPluginFramework::Keyboard::Open() const
07012cdc 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
07012d74 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07012d7c 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
07012d84 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
07012d8c 000000d0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) [clone .isra.0]
07012e5c 00000094 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07012ef0 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07012f80 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07013044 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070130d4 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07013198 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07013228 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
070132ec 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07013398 000000d0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07013468 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
0701356c 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07013670 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07013774 00000074 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
070137e8 00000088 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07013870 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070138c8 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
070138d0 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070138d0 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070138ec 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070138ec 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07013934 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07013964 0000001c T CTRPluginFramework::HotkeyManager::Count()
07013980 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07013a00 00000088 T CTRPluginFramework::Hotkey::AskForKeys()
07013a88 00000138 T CTRPluginFramework::HotkeyManager::AskForKeys()
07013bc0 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07013c3c 000000fc T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07013d38 000000c8 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07013e00 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07013f48 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
07013f7c 000000e8 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
07014064 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070140ec 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
0701415c 0000005c t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&) [clone .isra.0]
070141b8 000000c4 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
0701427c 0000001c W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
07014298 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
070142d0 00000064 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
07014334 00000110 T CTRPluginFramework::Color::Fade(float)
07014444 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07014484 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
07014500 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07014720 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
070147e8 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
070147f0 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
07014854 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070148ac 00000018 W CTRPluginFramework::ProcessImpl::UserProcessEventCallback(CTRPluginFramework::Process::Event)
070148c4 00000028 T OnLoadCro
070148ec 000000ac T CTRPluginFramework::ThreadExit()
07014998 00000054 T abort
070149ec 000000c8 T __entrypoint
07014ab4 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014ab4 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014adc 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07014b5c 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
07014bd0 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07014c00 000006f0 T CTRPluginFramework::KeepThreadMain(void*)
070152f0 000000b0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
070153a0 0000020c T CTRPluginFramework::Initialize()
070155ac 00000044 T CTRPluginFramework::ThreadInit(void*)
070155f0 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
07015638 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
07015668 000000b8 t NCSNDCmd_Add
07015720 00000084 t NCSNDCmd_Execute.constprop.0
070157a4 00000068 T ncsndNotifyAptEvent
0701580c 00000004 t ncsndAptHook
07015810 000001c8 T ncsndInit
070159d8 000000ac T ncsndExit
07015a84 00000024 T ncsndInitializeSound
07015aa8 00000264 T ncsndPlaySound
07015d0c 00000040 T ncsndStopSound
07015d4c 00000090 T ncsndIsPlaying
07015ddc T LoadCROHooked
07015df0 T AR__ExecuteRoutine
07015e18 t stackBak
07015e20 00000020 T __libctru_exit
07015e40 0000001c T __appExit
07015e5c 0000003c T __syscall_getreent
07015e98 0000000c T __aeabi_read_tp
07015ea4 0000003c T __getThreadLocalStorage
07015ee0 00000070 T __syscall_gettod_r
07015f50 00000034 T __syscall_nanosleep
07015f84 00000004 T __syscall_lock_acquire
07015f88 00000004 T __syscall_lock_release
07015f8c 00000004 T __syscall_lock_acquire_recursive
07015f90 00000004 T __syscall_lock_release_recursive
07015f94 00000054 T initThreadVars
07015fe8 0000005c T __system_initSyscalls
07016044 00000190 T __createThread
070161d4 00000110 T __startThread
070162e4 00000024 T threadGetHandle
07016308 0000002c T threadFree
07016334 00000024 T threadJoin
07016358 00000020 T threadGetCurrent
07016378 0000003c T threadExit
070163b4 00000020 t _thread_begin
070163d4 0000003c T fontEnsureMappedExtension
07016410 0000004c T hidInitFake
0701645c 0000003c T hidExitFake
07016498 0000002c T hidSetSharedMem
070164c4 00000070 T plgLdrExit
07016534 000000d4 T plgLdrInit
07016608 00000050 T PLGLDR__GetPluginPath
07016658 00000024 T PLGLDR__FetchEvent
0701667c 000000e8 T PLGLDR__Reply
07016764 000000b0 T __system_allocateHeaps
07016814 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
07016840 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
07016868 00000154 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
070169bc 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
07016a3c 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
07016a64 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07016a8c 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
07016af0 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
07016bc0 00000004 T __gsp__Update
07016bc4 00000288 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
07016e4c 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
07016e64 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
07016e84 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
07016ecc 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
07016f00 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
07016f24 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
07016f48 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
07016f84 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
07016fb0 00000090 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
07017040 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
07017074 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
0701711c 0000017c T CTRPluginFrameworkImpl::Services::GSP::Initialize()
07017298 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
070172d4 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
070172f4 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
07017314 00000014 t decltype (::new ((void*)(0)) CTRPluginFramework::AsmWrapper()) std::construct_at<CTRPluginFramework::AsmWrapper>(CTRPluginFramework::AsmWrapper*) [clone .isra.0]
07017328 00000288 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
070175b0 00000044 W CTRPluginFramework::Lock::~Lock()
070175b0 00000044 W CTRPluginFramework::Lock::~Lock()
070175f4 000000d4 T CTRPluginFramework::HookManager::HookManager()
070175f4 000000d4 T CTRPluginFramework::HookManager::HookManager()
070176c8 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
0701773c 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
070177a0 000000d0 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
07017870 0000000c T CTRPluginFramework::HookManager::Lock()
0701787c 0000000c T CTRPluginFramework::HookManager::Unlock()
07017888 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
070178f0 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
07017968 000000c8 T __hook__CheckTlsValue
07017a30 00000144 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
07017b74 00000084 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
07017bf8 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
07017d54 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
07017d60 00000044 t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
07017da4 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
07017db4 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07017db4 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07017e14 00000098 T CTRPluginFramework::Scheduler::Initialize()
07017eac 0000004c T CTRPluginFramework::Scheduler::Exit()
07017ef8 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
07017f38 00000044 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
07017f7c 00000040 t std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [clone .isra.0]
07017fbc 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
07018160 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
07018264 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
070182bc 00000140 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
070183fc 00000174 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
07018570 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
070185b4 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
0701863c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07018660 00000004 t addrMapNodeDestructor(rbtree_node*)
07018664 00000144 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
070187a8 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
070187b0 0000006c T CTRPluginFramework::Heap::Free(void*)
0701881c 0000000c T CTRPluginFramework::Heap::SpaceFree()
07018828 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07018834 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07018854 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070188ac 000002b4 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07018b60 0000003c W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short, unsigned short>(unsigned short*, unsigned short*, unsigned short*)
07018b9c 000001d4 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07018d70 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07018d70 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07018e34 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07018e40 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
07018e74 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07018e80 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07018e98 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07018ed8 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
07018f1c 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07018f2c 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07018f40 00000004 T Kernel::Initialize()
07018f44 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07018f5c 0000000c T KProcess::GetCurrent()
07018f68 00000024 T KProcess::PatchCore2Access()
07018f8c 0000002c T KProcess::PatchCategory(unsigned long)
07018fb8 00000014 T KProcess__PatchCategory
07018fcc 0000002c T KProcess::PatchMaxPriority(unsigned long)
07018ff8 00000014 T KProcess__PatchMaxPriority
0701900c 00000028 T KProcess::PatchMaxThreads()
07019034 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
07019080 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
07019114 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
07019150 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
07019188 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
070191ec 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0701925c 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
070192f0 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
07019398 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
070193d0 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
070193ec 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
07019404 t _store_reg_loop
07019424 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
07019430 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
07019430 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
07019458 000000ec W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
07019544 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
07019580 000000bc T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
0701963c 00000424 T CTRPluginFramework::ProcessImpl::Initialize()
07019a60 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
07019acc 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07019bac 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07019bb8 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07019bec 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
07019bec 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
07019c8c 00000050 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
07019cdc 00000038 T CTRPluginFramework::EventManager::Clear()
07019d14 000001e8 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
07019f00 00000068 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
07019f68 000002f0 T CTRPluginFramework::EventManager::ProcessEvents()
0701a258 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0701a324 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0701a32c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701a384 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
0701a38c 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
0701a390 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
0701a394 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
0701a3dc 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0701a400 00000044 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
0701a444 00000128 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
0701a56c 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0701a5fc 00000200 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
0701a7fc 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0701a808 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0701a858 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
0701a884 00000028 W CTRPluginFramework::Mutex::~Mutex()
0701a884 00000028 W CTRPluginFramework::Mutex::~Mutex()
0701a8ac 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0701a8ac 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0701a9b4 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0701a9bc 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0701a9dc 00000190 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701ab6c 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0701ab8c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0701aba8 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0701abc4 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
0701abd4 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
0701abdc 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0701abe4 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0701abec 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0701abec 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0701ac30 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0701ac30 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0701ac58 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0701ac58 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0701ac80 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
0701adb8 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
0701adf4 00000100 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0701aef8 00000750 T CTRPluginFramework::PluginMenuImpl::Run()
0701b648 00000050 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0701b698 000000a0 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0701b738 00000104 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0701b83c 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701b83c 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701b8b0 00000198 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0701ba48 00000120 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0701bb68 000001a4 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0701bd0c 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
0701bd54 000000b0 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0701be04 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0701be40 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701bf74 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701c0b4 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0701c0c0 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0701c0d4 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0701c0d4 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0701c278 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0701c278 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0701c43c 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0701c478 00000058 T CTRPluginFramework::Menu::CloseAll()
0701c4d0 00000030 T CTRPluginFramework::Menu::~Menu()
0701c4d0 00000030 T CTRPluginFramework::Menu::~Menu()
0701c500 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0701c50c 00000008 T CTRPluginFramework::Menu::GetFolder() const
0701c514 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0701c51c 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
0701c560 000003b4 T CTRPluginFramework::Menu::Draw() const
0701c918 00000098 T CTRPluginFramework::Menu::_ScrollUp(int)
0701c9b0 00000098 T CTRPluginFramework::Menu::_ScrollDown(int)
0701ca48 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0701cc90 0000016c T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0701cdfc 00000068 T CTRPluginFramework::Menu::ShowNote()
0701ce64 00000008 T CTRPluginFramework::Menu::CloseNote()
0701ce6c 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0701ce74 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701ce74 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701cf58 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701cf58 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701d084 00000054 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0701d0d8 00000044 T CTRPluginFramework::Menu::Pop()
0701d11c 000000e8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0701d204 000000b4 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0701d2b8 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701d2b8 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701d39c 00000020 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701d3bc 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0701d3cc 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0701d41c 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
0701d434 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0701d458 000000b0 T CTRPluginFramework::MenuFolderImpl::Clear()
0701d508 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
0701d518 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0701d538 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0701d590 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d590 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d664 000000d8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d664 000000d8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d73c 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0701d74c 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0701d75c 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0701d76c 00000030 t CTRPluginFramework::GetIndex(int)
0701d79c 00000134 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0701d8d0 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
0701d944 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0701d944 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0701d9b0 00000094 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0701da44 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
0701dc10 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
0701dc3c 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701dc3c 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701dc74 00000110 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
0701dd84 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
0701ddc0 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ddc0 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701df1c 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0701df74 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0701e034 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0701e120 000000bc t __tcf_1
0701e1dc 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701e234 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0701e240 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0701e568 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0701e6a0 00000498 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0701eb38 00000118 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0701ec50 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0701ece0 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0701ed18 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0701ed44 000000ec T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0701ee30 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
0701eeb4 00000080 T CTRPluginFramework::PluginMenuHome::Init()
0701ef34 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0701ef90 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
0701f050 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0701f050 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0701f4fc 00000130 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0701f62c 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701f67c 00000088 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
0701f708 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0701fab4 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0701fcd8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0701fcec 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0701fd00 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0701fd14 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0701fd18 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0701fd1c 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
0701fd44 000000bc t __tcf_1
0701fe00 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0701fe40 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701fe98 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0701fed8 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
0701fefc 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0701ff10 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0701ff24 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0701ff38 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0701ff4c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0701ff60 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0701ff74 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0701ff88 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0701ff9c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0701ffb0 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07020100 0000014c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0702024c 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0702028c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0702030c 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
0702048c 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0702054c 00000064 t CTRPluginFramework::MenuHotkeyModifier()
070205b0 00000b2c T CTRPluginFramework::PluginMenuTools::InitMenu()
070210dc 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07021144 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0702124c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0702124c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
070213dc 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07021488 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
070214f8 00000114 W std::__cxx11::to_string(int)
0702160c 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0702179c 0000016c t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07021908 00000048 t CTRPluginFramework::Reboot()
07021950 00000054 t CTRPluginFramework::Shutdown()
070219a4 0000013c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07021ae0 000001fc t CTRPluginFramework::UpdateScreenshotText()
07021cdc 00000460 t CTRPluginFramework::ScreenshotMenuCallback()
0702213c 00000130 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0702226c 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070223d0 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07022404 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
07022448 0000065c t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
07022aa4 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07022ac4 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07022b0c 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
07022b48 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07022b58 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07022b58 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07022b9c 0000001c T CTRPluginFramework::SubMenu::operator()()
07022bb8 000001f8 T CTRPluginFramework::SubMenu::Draw()
07022db0 000000e0 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07022e90 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07022e98 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
07022eb4 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
07022eec 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07022eec 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07022f70 000001ac T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0702311c 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0702311c 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07023120 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07023120 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07023124 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07023124 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07023128 00000018 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07023140 00000018 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07023158 00000018 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07023170 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
0702330c 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07023448 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
0702353c 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0702357c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070235d4 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07023614 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
07023614 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
07023760 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0702377c 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
07023798 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0702380c 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
07023838 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
07023874 00000010 T CTRPluginFramework::HexEditor::Refresh()
07023884 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
070238c8 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
07023900 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
0702392c 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
070239ac 00000094 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
07023a40 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
07023b0c 000000c0 T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
07023bcc 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
07023c7c 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
07023e30 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
07023e40 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
07023e50 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
07023e60 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
07023ea0 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
07023ee0 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
07023f4c 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
07024020 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
07024078 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070240f8 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
070240f8 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
070242f8 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
070244c0 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
070245a4 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
0702465c 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
070248bc 00000104 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070249c0 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
07024b44 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07024bd4 00000270 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
07024e44 000001e0 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
07025024 000002b0 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
070252d4 00000060 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
07025334 00000184 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
070254b8 000001c8 T CTRPluginFramework::HexEditor::_Update()
07025680 0000028c T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0702590c 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
0702592c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0702592c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0702594c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0702596c 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
070259c4 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
070259c4 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07025a48 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07025a48 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07025aa8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07025aa8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07025b08 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
07025b0c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07025b64 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07025ba4 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
07025bd8 00000344 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07025f1c 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
07025f1c 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
07026104 000000d4 T CTRPluginFramework::GuideReader::_LoadBMP()
070261d8 000003d8 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
070265b0 0000015c T CTRPluginFramework::GuideReader::Draw()
0702670c 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07026780 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070267d8 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07026800 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.0]
07026838 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
07026878 00000014 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.0]
0702688c 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0702688c 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07026908 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
07026910 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
07026918 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
07026920 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
07026928 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
07026930 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
07026938 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
07026994 000001cc T CTRPluginFramework::KeyboardImpl::_RenderTop()
07026b60 000004e0 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
07027040 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
07027204 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0702726c 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
070272fc 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0702737c 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07027400 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0702755c 0000016c T CTRPluginFramework::KeyboardImpl::_Update(float)
070276c8 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07027728 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0702779c 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
07027844 0000051c T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
07027d60 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07027d68 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07027d68 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07027d90 00000060 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
07027df0 000000ec W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
07027edc 0000002c W std::vector<float, std::allocator<float> >::push_back(float const&)
07027f08 000000e8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
07027ff0 0000002c W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
0702801c 000002c0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
070282dc 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07028340 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070283a0 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
070283f4 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [3]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07028448 00000058 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)(), (declval<int>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
070284a0 000000f4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07028594 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
070285e8 00000714 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07028cfc 0000007c T CTRPluginFramework::KeyboardImpl::operator()(int&)
07028d78 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07028dac 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028dac 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028f84 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028f84 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702914c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
07029178 00000118 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
07029290 000000d8 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
07029368 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07029438 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07029508 000008bc T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07029dc4 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
07029ed0 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
07029fdc 000001a8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0702a184 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
0702a1cc 00000054 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
0702a220 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0702ac74 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0702b1f0 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0702b76c 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
0702b7ac 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0702b7f8 0000049c T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
0702bc94 00000368 T CTRPluginFramework::KeyboardImpl::Run()
0702bffc 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702bffc 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702c034 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
0702c060 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
0702c074 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
0702c098 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702c0f0 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0702c130 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0702c170 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0702c1c4 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
0702c1e8 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
0702c210 00000030 W CTRPluginFramework::ARCode::~ARCode()
0702c210 00000030 W CTRPluginFramework::ARCode::~ARCode()
0702c240 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
0702c274 00000014 t __tcf_1
0702c288 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0702c308 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
0702c428 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
0702c50c 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702c568 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
0702c6e0 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
0702c7fc 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0702c7fc 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0702ca50 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
0702cc1c 00000178 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0702cd94 00000120 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0702ceb4 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
0702cef0 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0702d03c 0000003c W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long const, unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0702d078 00000104 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
0702d17c 0000026c T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
0702d3e8 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0702d4b4 000001bc T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
0702d670 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0702d810 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702d868 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0702d8a8 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0702d9c0 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0702da18 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0702da28 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0702da5c 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0702da88 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0702daf8 000000ec W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
0702dbe4 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0702dc20 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0702dca0 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0702dd00 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0702de6c 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0702de6c 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0702e2dc 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0702e540 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0702e580 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0702e628 000002bc T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0702e8e4 0000016c t CTRPluginFramework::ClearSearchFolder()
0702ea50 000000e8 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0702eb38 000005f0 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
0702f128 0000003c W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region const, CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0702f164 000002f0 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0702f454 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0702f800 00000218 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0702fa18 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0702fa44 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0702fa80 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0702fabc 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0702faf8 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0702fb34 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0702fb70 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0702fb9c 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0702fbd8 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0702fc14 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0702fc50 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0702fc8c 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0702fcb8 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0702fcf4 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0702fd20 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0702fd4c 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0702fd78 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
0702fdb4 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0702fde0 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0702fe1c 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0702fe48 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0702fe7c 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0702feb8 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0702fee4 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0702ff20 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
0702ff4c 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0702ff78 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0702ffa4 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0702ffd0 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
0702fffc 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
07030028 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
07030054 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
07030080 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
070300bc 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
070300e8 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
07030104 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
07030138 00000024 t fontGetSystemFont
0703015c 00000010 T CTRPluginFramework::Glyph::Width() const
0703016c 000004e4 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
07030650 0000034c T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0703099c 000000c4 T CTRPluginFramework::Font::Initialize()
07030a60 0000001c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
07030a7c 0000018c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
07030c08 000000c8 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
07030cd0 0000012c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
07030dfc 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
07030e88 00000020 T CTRPluginFramework::Font::GetGlyph(char)
07030ea8 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
07030ef0 00000078 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
07030f68 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07030f68 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07030f7c 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
07030f7c 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
07030fa4 00000024 T CTRPluginFramework::UIContainer::Draw()
07030fc8 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07030ffc 000000e8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
070310e4 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07031118 00000008 W CTRPluginFramework::Drawable::operator()()
07031120 000000e4 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07031204 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703125c 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
0703125c 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
070312e8 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
070312e8 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
070313a0 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
070313a0 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
0703142c 0000004c T CTRPluginFramework::TouchKey::Clear()
07031478 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07031478 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07031498 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070314b8 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
070314c0 00000008 T CTRPluginFramework::TouchKey::IsEnabled()
070314c8 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07031538 00000070 T CTRPluginFramework::TouchKey::Draw()
070315a8 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
070315b0 000000e8 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07031698 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031698 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703176c 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0703176c 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0703183c 00000168 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070319a4 00000094 T CTRPluginFramework::ComboBox::Draw()
07031a38 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
07031a38 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
07031a8c 00000020 W CTRPluginFramework::ComboBox::~ComboBox()
07031aac 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07031aac 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07031af8 0000003c T CTRPluginFramework::ComboBox::Clear()
07031b34 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07031bb4 000000a8 T CTRPluginFramework::ComboBox::operator()()
07031c5c 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031cac 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07031cac 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07031cb0 00000014 T CTRPluginFramework::FloatingButton::Draw()
07031cc4 00000014 T CTRPluginFramework::FloatingButton::operator()()
07031cd8 00000018 T CTRPluginFramework::FloatingButton::~FloatingButton()
07031cf0 00000198 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07031e88 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07031e88 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07031ec8 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(void*)
07031f1c 0000000c T CTRPluginFramework::OSDImpl::Lock()
07031f28 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07031f44 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07031f50 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
07032038 00000194 T CTRPluginFramework::OSDImpl::WaitFramePaused()
070321cc 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07032278 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
070322a8 000000dc t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
07032384 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07032448 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07032448 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070325c0 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070325c0 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07032718 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
070329d8 000001f4 T CTRPluginFramework::MessageBoxImpl::operator()()
07032bcc 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07032bd0 000002fc T CTRPluginFramework::TextBox::Draw()
07032ecc 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
07032ef8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07032f50 00000094 T CTRPluginFramework::TextBox::TextBox()
07032f50 00000094 T CTRPluginFramework::TextBox::TextBox()
07032fe4 0000000c T CTRPluginFramework::TextBox::Open() const
07032ff0 0000000c T CTRPluginFramework::TextBox::Close() const
07032ffc 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07033008 00000228 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07033230 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0703323c 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
070332d0 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07033384 00000050 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
070333d4 000000a0 W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07033474 0000023c T CTRPluginFramework::TextBox::_GetTextInfos()
070336b0 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070336b0 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07033834 00000160 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07033994 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07033994 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07033a08 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
07033a10 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
07033a44 000000cc T CTRPluginFramework::TouchKeyString::Draw()
07033b10 000000e8 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07033bf8 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07033c10 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
07033c24 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
07033c3c 00000048 T CTRPluginFramework::TouchKeyString::operator()()
07033c84 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
07033c8c 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07033c8c 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07033d38 0000007c T CTRPluginFramework::NumericTextBox::Draw()
07033db4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07033db4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07033dd4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07033df4 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07033e8c 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
07033ec4 00000060 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07033f24 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07033f34 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07033f3c 0000000c T CTRPluginFramework::NumericTextBox::Clear()
07033f48 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07033f48 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07033fb0 000000f4 T CTRPluginFramework::NumericTextBox::operator()()
070340a4 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
070340b4 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07034128 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07034180 00000108 t RegBlock& std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&) [clone .isra.0]
07034288 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
070342c0 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
07034368 00000140 T ARM_Disasm::Decode01(unsigned long)
070344a8 00000028 T ARM_Disasm::Decode10(unsigned long)
070344d0 00000078 T ARM_Disasm::Decode11(unsigned long)
07034548 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
0703459c 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
070345ec 00000110 T ARM_Disasm::DecodeALU(unsigned long)
070346fc 000000c4 T ARM_Disasm::Decode00(unsigned long)
070347c0 00000030 T ARM_Disasm::Decode(unsigned long)
070347f0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07034870 0000035c T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
07034bcc 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07034c44 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
07034cb4 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07034d34 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0703517c 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0703539c 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07035440 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07035500 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
070355c0 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07035670 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07035700 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
07035878 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0703598c 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
070359f0 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
07035a84 00000354 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07035dd8 000002fc T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
070360d4 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
07036148 0000014c t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036294 00000360 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
070365f4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703664c 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070366dc 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07036718 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07036718 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0703673c 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
07036764 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07036764 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07036798 000000b0 T CTRPluginFramework::ARCodeContext::Clear()
07036848 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07036848 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07036958 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07036958 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07036a7c 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036b6c 00000084 T CTRPluginFramework::ARCode::Update()
07036bf0 0000003c T CTRPluginFramework::ARCodeContext::Update()
07036c2c 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
07036cec 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
07036d0c 00000020 t __tcf_1
07036d2c 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.0]
07036d44 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07036d6c 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
07036d84 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07036dd4 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036e24 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036e6c 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07036e6c 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07036ebc 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
07036edc 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07036f88 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
07036fc8 00000128 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
070370f0 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07037158 000000f0 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07037248 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0703734c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0703735c 00000118 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07037474 00000038 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
070374ac 000004b8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07037964 00000154 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
07037ab8 0000074c T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
07038204 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07038254 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07038254 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070382cc 00000020 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070382ec 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070382ec 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038338 00000068 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070383a0 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07038438 00000130 T CTRPluginFramework::MenuEntryActionReplay::Update()
07038568 000000b0 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07038618 00000140 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07038758 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
07038798 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070387f0 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07038818 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07038818 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07038818 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07038818 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07038864 00000044 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070388a8 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
070388a8 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
070388c8 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
070388fc 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0703895c 00000040 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703899c 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0703899c 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07038ae0 000002b8 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07038d98 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07038df4 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
07038e44 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07038eac 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07038f58 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07038f58 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07038fd0 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703900c 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07039040 00001454 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0703a494 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
0703a520 00000060 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0703a580 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0703a5a4 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0703a5cc 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
0703a608 00000030 t __tcf_1
0703a638 0000012c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703a764 0000003c t CTRPluginFramework::ARCodeEditor::CodeLine& std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&) [clone .isra.0]
0703a7a0 000002f4 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0703aa94 00000688 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0703b11c 000001a8 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
0703b2c4 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0703b380 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0703b7f4 000003cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0703bbc0 000001f4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0703bdb4 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0703bdb4 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0703bde0 00000018 T CTRPluginFramework::LineReader::~LineReader()
0703bde0 00000018 T CTRPluginFramework::LineReader::~LineReader()
0703bdf8 000000fc T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703bef4 00000024 t __tcf_0
0703bf18 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0703bf18 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0703bf40 0000004c T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
0703bf8c 00000048 T CTRPluginFramework::LineWriter::Flush()
0703bfd4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0703bfd4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0703bff0 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703c054 00000018 T CTRPluginFramework::LineWriter::Close()
0703c06c 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0703c0ac 00000020 T CTRPluginFramework::Time::AsSeconds() const
0703c0cc 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
0703c0f4 00000030 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
0703c124 00000090 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_get_insert_unique_pos(unsigned long const&) [clone .isra.0]
0703c1b4 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0703c1b4 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0703c1e8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0703c1e8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0703c208 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
0703c25c 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
0703c2a4 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
0703c2ac 00000170 W std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_hint_unique<std::pair<unsigned long, ThreadVars*> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, ThreadVars*> >, std::pair<unsigned long, ThreadVars*>&&)
0703c41c 00000218 T __ctrpf_getThreadVars
0703c634 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
0703c66c 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
0703c6a4 0000000c T CTRPluginFramework::Sound::Sound()
0703c6a4 0000000c T CTRPluginFramework::Sound::Sound()
0703c6b0 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0703c6b0 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0703c6c4 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703c6c4 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703c6f8 00000090 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
0703c788 00000070 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
0703c7f8 00000058 T CTRPluginFramework::Sound::~Sound()
0703c7f8 00000058 T CTRPluginFramework::Sound::~Sound()
0703c850 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
0703c868 00000040 T CTRPluginFramework::Sound::Play(int, int)
0703c8a8 00000008 T CTRPluginFramework::Sound::Play(int)
0703c8b0 00000008 T CTRPluginFramework::Sound::Play()
0703c8b8 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703c8b8 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703c8c8 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703c8c8 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703c8e4 00000384 t cwav_initialize
0703cc68 000000f4 t cwav_stopImpl.part.0
0703cd5c 00000004 T cwavUseEnvironment
0703cd60 00000034 T cwavSetVAToPACallback
0703cd94 00000050 T cwavLoad
0703cde4 000004d8 T cwavPlay
0703d2bc 00000064 T cwavStop
0703d320 00000170 T cwavFree
0703d490 00000004 T cwav_defaultVAToPA
0703d494 00000004 T cwavEnvUseEnvironment
0703d498 00000008 T cwavEnvGetEnvironment
0703d4a0 00000004 T cwavEnvInitialize
0703d4a4 00000004 T cwavEnvFinalize
0703d4a8 00000014 T cwavEnvCompatibleEncoding
0703d4bc 00000008 T cwavEnvGetChannelAmount
0703d4c4 00000018 T cwavEnvIsChannelAvailable
0703d4dc 000000f4 T cwavEnvPlay
0703d5d0 00000004 T cwavEnvChannelIsPlaying
0703d5d4 00000004 T cwavEnvStop
0703d5d8 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0703d604 00000034 W MemPool::DelBlock(MemBlock*)
0703d638 0000005c T MemPool::CoalesceRight(MemBlock*)
0703d694 000000fc T MemPool::Allocate(MemChunk&, unsigned long, int)
0703d790 00000100 T MemPool::Deallocate(MemChunk const&)
0703d890 00000020 T MemPool::GetFreeSpace()
0703d8b0 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703d8b0 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703d974 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
0703d97c 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
0703d994 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0703d994 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0703d9bc 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
0703da8c 000000c4 T CTRPluginFramework::Search32::FirstSearchSpecified()
0703db50 00000064 W CTRPluginFramework::Search::~Search()
0703db50 00000064 W CTRPluginFramework::Search::~Search()
0703dbb4 00000044 T CTRPluginFramework::Search32::~Search32()
0703dbb4 00000044 T CTRPluginFramework::Search32::~Search32()
0703dbf8 00000020 T CTRPluginFramework::Search32::~Search32()
0703dc18 00000024 W CTRPluginFramework::Search::~Search()
0703dc3c 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0703dc3c 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0703de40 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703de40 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703de60 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0703de60 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0703def4 0000010c W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0703e000 000001b4 T CTRPluginFramework::Search32::SecondSearchSpecified()
0703e1b4 00000100 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
0703e2b4 0000019c T CTRPluginFramework::Search32::SecondSearchUnknown()
0703e450 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0703e588 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0703e5d4 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0703e718 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0703e85c 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703e898 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
0703e900 000000d8 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0703e9d8 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
0703ea14 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
0703ea94 000000f8 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0703eb8c 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0703ebd8 0000032c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0703ef04 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703f194 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703f43c 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703f6cc 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0703f700 0000031c T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703fa1c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703fa74 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0703fab4 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0703fb68 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0703fbc0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703fc40 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0703fc40 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0703fcd4 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703fcd4 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703fd74 00000198 T CTRPluginFramework::SearchMenu::Update()
0703ff0c 0000018c T CTRPluginFramework::SearchMenu::_Edit()
07040098 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07040114 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
07040270 0000014c T CTRPluginFramework::SearchMenu::_Export()
070403bc 000005b8 T CTRPluginFramework::SearchMenu::Draw()
07040974 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
07040a90 00000518 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07040fa8 000000e4 T CTRPluginFramework::Converter::Converter()
07040fa8 000000e4 T CTRPluginFramework::Converter::Converter()
0704108c 00000010 T CTRPluginFramework::Converter::Instance()
0704109c 00000110 T CTRPluginFramework::Converter::_Draw()
070411ac 00000228 T CTRPluginFramework::Converter::operator()(unsigned long)
070413d4 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
070413f8 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0704141c 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07041440 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07041468 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07041490 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
070414b8 00000100 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
070415b8 00001a50 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07043008 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
070430b8 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
070430d8 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704355c 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070439e4 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043e60 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07044488 00000920 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07044da8 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070456b8 000008e8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07045fa0 00000c54 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07046bf4 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047498 00000928 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047dc0 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070486e4 00000de4 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070494c8 00000c88 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704a150 0000075c T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704a8ac 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704acb4 000006d4 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704b388 00000084 W envGetHandle
0704b40c 00000050 W envDestroyHandles
0704b45c 0000000c T __sync_init
0704b468 00000018 T __sync_fini
0704b480 0000002c T syncArbitrateAddressWithTimeout
0704b4ac 0000001c T LightLock_Init
0704b4c8 000000ac T LightLock_Lock
0704b574 00000040 T LightLock_Unlock
0704b5b4 00000024 T RecursiveLock_Init
0704b5d8 00000030 T RecursiveLock_Lock
0704b608 00000078 T RecursiveLock_TryLock
0704b680 00000054 T RecursiveLock_Unlock
0704b6d4 00000040 T LightEvent_Init
0704b714 000000a4 T LightEvent_Clear
0704b7b8 00000048 T LightEvent_Pulse
0704b800 000000c8 T LightEvent_Signal
0704b8c8 000000a0 T LightEvent_Wait
0704b968 00000014 T LightSemaphore_Init
0704b97c 00000094 T LightSemaphore_Acquire
0704ba10 00000064 T LightSemaphore_Release
0704ba74 00000074 T osConvertVirtToPhys
0704bae8 00000054 T osGetTimeRef
0704bb3c 000000ec T osGetTime
0704bc28 00000094 T fontEnsureMapped
0704bcbc 00000100 T fontGlyphIndexFromCodePoint
0704bdbc 00000070 T fontGetCharWidthInfo
0704be2c 0000012c T srvInit
0704bf58 00000058 T srvExit
0704bfb0 000000a0 T srvGetServiceHandleDirect
0704c050 00000038 T srvGetServiceHandle
0704c088 00000038 T srvPublishToSubscriber
0704c0c0 000000b4 t mappableFindAddressWithin
0704c174 00000028 T mappableInit
0704c19c 00000080 T mappableAlloc
0704c21c 00000004 T mappableFree
0704c220 000000a4 T cfguInit
0704c2c4 0000003c T cfguExit
0704c300 00000054 T CFGU_GetSystemLanguage
0704c354 000000f0 T gspExit
0704c444 00000024 W hidShouldUseIrrst
0704c468 0000018c T hidInit
0704c5f4 000000e8 T hidExit
0704c6dc 000002a4 T hidScanInput
0704c980 00000010 T hidKeysHeld
0704c990 00000010 T hidKeysDown
0704c9a0 00000010 T hidKeysUp
0704c9b0 00000018 T hidTouchRead
0704c9c8 0000008c T acInit
0704ca54 0000003c T acExit
0704ca90 000000a4 T amInit
0704cb34 0000003c T amExit
0704cb70 000000b4 T sslcInit
0704cc24 00000048 T sslcExit
0704cc6c 00000048 T sslcGenerateRandomData
0704ccb4 00000158 T aptSendCommand
0704ce0c 00000030 T aptHook
0704ce3c 00000030 T aptUnhook
0704ce6c 00000028 T APT_PrepareToCloseApplication
0704ce94 00000048 T APT_CloseApplication
0704cedc 0000007c T APT_CheckNew3DS
0704cf58 00000048 T APT_GetSharedFont
0704cfa0 000000d4 T micExit
0704d074 00000128 T micInit
0704d19c 00000014 T micGetSampleDataSize
0704d1b0 00000028 T micGetLastSampleOffset
0704d1d8 00000048 T MICU_StartSampling
0704d220 0000002c T MICU_StopSampling
0704d24c 0000000c T srvPmGetSessionHandle
0704d258 000000cc T fsInit
0704d324 0000003c T fsExit
0704d360 000000cc T FSUSER_OpenFile
0704d42c 000000bc T FSUSER_DeleteFile
0704d4e8 000000f8 T FSUSER_RenameFile
0704d5e0 000000bc T FSUSER_DeleteDirectoryRecursively
0704d69c 000000d4 T FSUSER_CreateFile
0704d770 000000c4 T FSUSER_CreateDirectory
0704d834 000000f8 T FSUSER_RenameDirectory
0704d92c 000000b4 T FSUSER_OpenDirectory
0704d9e0 00000094 T FSUSER_OpenArchive
0704da74 00000058 T FSFILE_Read
0704dacc 00000060 T FSFILE_Write
0704db2c 00000038 T FSFILE_GetSize
0704db64 00000028 T FSFILE_SetSize
0704db8c 0000003c T FSFILE_Close
0704dbc8 00000024 T FSFILE_Flush
0704dbec 00000028 T FSFILE_SetPriority
0704dc14 00000050 T FSDIR_Read
0704dc64 0000003c T FSDIR_Close
0704dca0 00000024 T inet_addr
0704dcc4 0000014c T socket
0704de10 00000014 t soc_open
0704de24 00000034 t soc_read
0704de58 00000034 t soc_write
0704de8c 0000008c t soc_close
0704df18 0000014c T socInit
0704e064 00000088 T socExit
0704e0ec 0000003c T _net_convert_error
0704e128 000001a4 T inet_aton
0704e2cc 00000174 T bind
0704e440 00000140 T socuipc_cmd7
0704e580 0000015c T socuipc_cmd8
0704e6dc 00000024 T soc_recvfrom
0704e700 000000a8 T recvfrom
0704e7a8 00000158 T socuipc_cmd9
0704e900 0000015c T socuipc_cmda
0704ea5c 00000024 T soc_sendto
0704ea80 000000a8 T sendto
0704eb28 00000010 T rbtree_init
0704eb38 000001b0 t do_insert
0704ece8 00000008 T rbtree_insert
0704ecf0 00000090 T rbtree_rotate
0704ed80 00000318 T rbtree_remove
0704f098 00000074 T rbtree_find
0704f10c 00000054 T encode_utf16
0704f160 000000e0 T encode_utf8
0704f240 000000c0 T utf8_to_utf16
0704f300 00000064 T decode_utf16
0704f364 0000013c T decode_utf8
0704f4a0 T svcQueryMemory
0704f4d0 T svcExitProcess
0704f4d8 T svcCreateThread
0704f4f8 T svcExitThread
0704f500 T svcSleepThread
0704f508 T svcSetThreadPriority
0704f510 T svcReleaseMutex
0704f518 T svcCreateEvent
0704f52c T svcSignalEvent
0704f534 T svcClearEvent
0704f53c T svcCreateMemoryBlock
0704f554 T svcMapMemoryBlock
0704f55c T svcUnmapMemoryBlock
0704f564 T svcCreateAddressArbiter
0704f578 T svcArbitrateAddress
0704f590 T svcArbitrateAddressNoTimeout
0704f598 T svcCloseHandle
0704f5a0 T svcWaitSynchronization
0704f5a8 T svcWaitSynchronizationN
0704f5d0 T svcDuplicateHandle
0704f5e4 T svcGetSystemTick
0704f5ec T svcGetSystemInfo
0704f604 T svcGetProcessInfo
0704f61c T svcConnectToPort
0704f630 T svcSendSyncRequest
0704f638 T svcOpenProcess
0704f64c T svcGetProcessId
0704f660 T svcGetThreadId
0704f674 T svcBreak
0704f67c T svcInvalidateProcessDataCache
0704f684 T svcFlushProcessDataCache
0704f68c T svcKernelSetState
0704f694 T svcQueryProcessMemory
0704f6b8 00000160 T irrstInit
0704f818 000000cc T irrstExit
0704f8e4 000000b4 T irrstScanInput
0704f998 00000024 T irrstKeysHeld
0704f9bc 0000005c T rbtree_node_next
0704fa18 00000004 T operator delete(void*)
0704fa1c 00000004 T operator delete(void*, std::nothrow_t const&)
0704fa20 00000004 T operator delete(void*, unsigned int)
0704fa24 00000004 T operator delete[](void*)
0704fa28 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0704fa34 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0704fa40 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
0704fa4c 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
0704fa58 00000038 t (anonymous namespace)::init()
0704fa90 00000024 t (anonymous namespace)::init_static_cond()
0704fab4 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704fab4 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704fad4 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704fb00 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704fb00 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704fb20 0000002c W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704fb4c 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704fb4c 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704fb6c 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704fb98 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704fb98 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704fbb8 0000002c W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704fbe4 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
0704fc10 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
0704fc3c 0000002c W __gnu_cxx::__throw_concurrence_broadcast_error()
0704fc68 000001a4 T __cxa_guard_acquire
0704fe0c 000000b0 T __cxa_guard_release
0704febc 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704febc 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704fedc 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704ff08 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704ff08 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704ff18 00000014 T std::get_new_handler()
0704ff2c 0000005c T operator new(unsigned int)
0704ff88 0000001c T operator new(unsigned int, std::nothrow_t const&)
0704ffa4 00000004 T operator new[](unsigned int)
0704ffa8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704ffa8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704ffc8 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704fff4 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0705012c 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
070501b4 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
070501f8 00000004 T std::type_info::~type_info()
070501f8 00000004 T std::type_info::~type_info()
070501fc 00000008 T std::type_info::__is_pointer_p() const
070501fc 00000008 T std::type_info::__is_function_p() const
07050204 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07050218 00000014 T std::__detail::_List_node_base::_M_unhook()
0705022c 00000058 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
07050284 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
070502f4 00000284 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
07050578 0000002c T std::__throw_bad_alloc()
070505a4 0000002c T std::__throw_bad_array_new_length()
070505d0 00000040 T std::__throw_logic_error(char const*)
07050610 00000040 T std::__throw_invalid_argument(char const*)
07050650 00000040 T std::__throw_length_error(char const*)
07050690 00000040 T std::__throw_out_of_range(char const*)
070506d0 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
070506e0 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
070507c8 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
070508a8 00000044 T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
070508ec 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07050940 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
07050964 00000140 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned int, char const*, unsigned int, unsigned int)
07050aa4 0000000c T std::bad_alloc::what() const
07050ab0 00000020 T std::bad_alloc::~bad_alloc()
07050ab0 00000020 T std::bad_alloc::~bad_alloc()
07050ad0 0000002c T std::bad_alloc::~bad_alloc()
07050afc 0000000c T std::bad_array_new_length::what() const
07050b08 00000020 T std::bad_array_new_length::~bad_array_new_length()
07050b08 00000020 T std::bad_array_new_length::~bad_array_new_length()
07050b28 0000002c T std::bad_array_new_length::~bad_array_new_length()
07050b54 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07050bb0 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07050bc4 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07050bc4 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07050be4 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07050c10 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07050c74 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07050cf0 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07050dc4 00000118 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
07050edc 000000d4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
07050fb0 00000044 T __cxa_allocate_exception
07050ff4 0000002c T __cxa_free_exception
07051020 000001b4 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
070511d4 T __cxa_end_cleanup
070511e4 00000134 T __cxa_type_match
07051318 000000b4 T __cxa_begin_cleanup
070513cc 000000b4 T __gnu_end_cleanup
07051480 000000cc T __cxa_begin_catch
0705154c 000000e0 T __cxa_end_catch
0705162c 00000004 T std::exception::~exception()
0705162c 00000004 T std::exception::~exception()
07051630 00000004 T std::bad_exception::~bad_exception()
07051630 00000004 T std::bad_exception::~bad_exception()
07051634 0000000c T transaction clone for std::exception::what() const
07051634 0000000c T std::exception::what() const
07051640 0000000c T transaction clone for std::bad_exception::what() const
07051640 0000000c T std::bad_exception::what() const
0705164c 00000018 T std::bad_exception::~bad_exception()
07051664 0000003c t eh_globals_dtor(void*)
070516a0 00000038 T __cxa_get_globals_fast
070516d8 00000074 T __cxa_get_globals
0705174c 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
0705178c 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
070517c0 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0705192c 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
07051984 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07051a5c 000006a0 T __gxx_personality_v0
070520fc 00000014 T __cxxabiv1::__terminate(void (*)())
07052110 00000018 T std::terminate()
07052128 0000000c T __cxxabiv1::__unexpected(void (*)())
07052134 00000018 T std::unexpected()
0705214c 00000014 T std::get_terminate()
07052160 00000014 T std::get_unexpected()
07052174 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
070521d4 00000054 T __cxa_init_primary_exception
07052228 00000054 T __cxa_throw
0705227c 000000b0 T __cxa_rethrow
0705232c 00000008 T std::logic_error::what() const
0705232c 00000008 T std::runtime_error::what() const
07052334 00000098 T std::logic_error::~logic_error()
07052334 00000098 T std::logic_error::~logic_error()
070523cc 00000098 T std::length_error::~length_error()
070523cc 00000098 T std::length_error::~length_error()
07052464 00000098 T std::invalid_argument::~invalid_argument()
07052464 00000098 T std::invalid_argument::~invalid_argument()
070524fc 00000098 T std::out_of_range::~out_of_range()
070524fc 00000098 T std::out_of_range::~out_of_range()
07052594 000000a0 T std::logic_error::~logic_error()
07052634 000000a0 T std::length_error::~length_error()
070526d4 000000a0 T std::invalid_argument::~invalid_argument()
07052774 000000a0 T std::out_of_range::~out_of_range()
07052814 000000d4 T std::logic_error::logic_error(char const*)
07052814 000000d4 T std::logic_error::logic_error(char const*)
070528e8 00000020 T std::invalid_argument::invalid_argument(char const*)
070528e8 00000020 T std::invalid_argument::invalid_argument(char const*)
07052908 00000020 T std::length_error::length_error(char const*)
07052908 00000020 T std::length_error::length_error(char const*)
07052928 00000020 T std::out_of_range::out_of_range(char const*)
07052928 00000020 T std::out_of_range::out_of_range(char const*)
07052948 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
070529cc 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
070529d0 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07052a40 0000002c T __cxa_call_terminate
07052a6c 00000150 T __cxa_call_unexpected
07052bbc 00000090 T modff
07052c50 0000027c T log2
07052ed0 000000c0 T cos
07052f90 000000c0 T ceilf
07053050 0000013c T ceil
0705318c 000000c0 T floorf
07053250 00000144 T floor
07053394 00000068 T roundf
07053400 00000158 T __kernel_cos
07053558 000000c0 T __kernel_sin
07053618 0000005c T __fpclassifyf
07053678 00000308 T __ieee754_rem_pio2
07053980 00000024 t with_errno
070539a8 00000050 T __math_divzero
070539f8 0000001c T __math_invalid
07053a14 00000014 T fabs
07053a28 00000870 T __kernel_rem_pio2
07054298 00000140 T scalbn
070543d8 00000044 T __popcountsi2
0705441c 00000030 T __aeabi_f2lz
0705441c 00000030 T __fixsfdi
07054450 00000040 T __aeabi_f2ulz
07054450 00000040 T __fixunssfdi
07054490 00000120 T __udivmoddi4
070545b0 00000018 t selfrel_offset31
070545c8 00000090 t search_EIT_table
07054658 00000040 t __gnu_unwind_get_pr_addr
07054698 0000010c t get_eit_entry
070547a4 00000088 t restore_non_core_regs
0705482c 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
07054840 00000004 t _Unwind_DebugHook
07054844 00000064 t unwind_phase2
070548a8 00000140 t unwind_phase2_forced
070549e8 000000a4 T __gnu_Unwind_RaiseException
07054a8c 00000028 T __gnu_Unwind_ForcedUnwind
07054ab4 00000074 T __gnu_Unwind_Resume
07054b28 00000020 T __gnu_Unwind_Resume_or_Rethrow
07054b48 00000004 T _Unwind_Complete
07054b4c 00000018 T _Unwind_DeleteException
07054b64 0000006c T _Unwind_VRS_Get
07054bd0 0000002c t _Unwind_GetGR
07054bfc 0000006c T _Unwind_VRS_Set
07054c68 0000002c t _Unwind_SetGR
07054c94 000000c0 T __gnu_Unwind_Backtrace
07054d54 00000410 t __gnu_unwind_pr_common
07055164 00000008 T __aeabi_unwind_cpp_pr0
0705516c 00000008 W __aeabi_unwind_cpp_pr1
07055174 00000008 W __aeabi_unwind_cpp_pr2
0705517c 00000424 T _Unwind_VRS_Pop
070555a0 00000064 t next_unwind_byte
07055604 0000002c t _Unwind_GetGR.constprop.0
07055630 00000004 t unwind_UCB_from_context
07055634 00000464 T __gnu_unwind_execute
07055a98 00000048 T __gnu_unwind_frame
07055ae0 00000010 T _Unwind_GetRegionStart
07055af0 0000001c T _Unwind_GetLanguageSpecificData
07055b0c 00000008 T _Unwind_GetDataRelBase
07055b14 00000008 T _Unwind_GetTextRelBase
07055b1c 0000025c t _strtoull_l.isra.0
07055d78 00000030 T _strtoull_r
07055da8 00000020 T memalign
07055dc8 0000014c T _memalign_r
07055f14 00000014 T atexit
07055f28 000000cc T snprintf
07055ff4 00000018 T isxdigit
0705600c 00000064 T sprintf
07056070 00000020 T calloc
07056090 000000c0 T _calloc_r
07056150 000000f8 T _malloc_trim_r
07056248 000002e8 T _free_r
07056530 00000018 T isspace
07056548 00000130 T strchr
07056678 000000d8 T memcmp
07056750 00000148 T _fclose_r
07056898 0000064c t get_arg
07056ee8 00003324 T _svfprintf_r
0705a20c 00000018 T malloc
0705a224 00000018 T free
0705a23c 0000079c T _malloc_r
0705a9d8 00000024 T getenv
0705a9fc 00000150 T memmove
0705ab4c 000000a4 T _vsnprintf_r
0705abf0 00000038 T vsnprintf
0705ac28 000000c8 T _findenv_r
0705acf0 00000018 T _getenv_r
0705ad08 000000f4 T memset
0705adfc 0000000c T __malloc_lock
0705ae08 0000000c T __malloc_unlock
0705ae14 00000090 T strlen
0705aea4 0000022c T __sflush_r
0705b0d0 00000094 T _fflush_r
0705b164 000000e4 T strncmp
0705b248 00000070 T _fwalk_sglue
0705b2b8 00000020 T localtime
0705b2d8 000000c4 T strncpy
0705b39c 0000001c t stdio_exit_handler
0705b3b8 0000005c t cleanup_stdio
0705b414 00000154 t global_stdio_init.part.0
0705b568 0000005c T __sinit
0705b5c4 0000000c T __sfp_lock_acquire
0705b5d0 0000000c T __sfp_lock_release
0705b5dc 00000360 T localtime_r
0705b93c 00000010 T ctime
0705b94c 00000048 T strnlen
0705b994 00000064 t sulp
0705b9f8 000013a4 T _strtod_l
0705cda0 00000108 T strtof
0705cea8 00000010 T _tzset_unlocked
0705ceb8 00000664 T _tzset_unlocked_r
0705d51c 00000020 T realloc
0705d53c 0000012c t iso_year_adjust
0705d668 0000126c t __strftime.isra.0
0705e8d4 00000030 T strftime
0705e904 0000000c T __gettzinfo
0705e910 000001d8 t _strtoul_l.isra.0
0705eae8 00000030 T _strtoul_r
0705eb18 00000034 T strtoul
0705eb4c 00000024 T __locale_mb_cur_max
0705eb70 0000004c T time
0705ebbc 00000024 T _localeconv_r
0705ebe0 00000254 T __tzcalc_limits
0705ee34 000000f0 T strcpy
0705ef24 000000e0 T memchr
0705f004 000000f0 T __utf8_wctomb
0705f0f4 0000011c T memcpy
0705f210 00000084 T __libc_init_array
0705f294 00000018 T close
0705f2ac 0000000c T __errno
0705f2b8 00000010 T nan
0705f2c8 0000000c T nanf
0705f2d8 00000088 T frexp
0705f360 0000012c T __smakebuf_r
0705f48c 000000a0 T _wcrtomb_r
0705f52c 00000028 T _wcsrtombs_r
0705f554 000000b0 T __register_exitproc
0705f604 0000000c T abs
0705f610 00000044 T __sread
0705f654 00000008 T __seofread
0705f65c 00000068 T __swrite
0705f6c4 00000044 T __sseek
0705f708 00000008 T __sclose
0705f710 00000074 T siscanf
0705f784 0000000c T __env_lock
0705f790 0000000c T __env_unlock
0705f79c 000000cc T sniprintf
0705f868 0000064c t get_arg
0705feb4 0000018c T __ssprint_r
07060040 00002230 T _svfiprintf_r
07062270 00000050 t get_arg
070622c0 000000e0 T _sungetc_r
070623a0 0000006c T __ssrefill_r
0706240c 000000c4 T _sfread_r
070624d0 000022cc T __ssvfiscanf_r
0706479c 0000000c T labs
070647a8 000000f0 t rshift
07064898 0000089c T __gethex
07065134 000001b4 t quorem
070652e8 00001218 T _dtoa_r
07066500 0000004c T __match
0706654c 0000029c T __hexnan
070667e8 00000088 T _Balloc
07066870 0000001c T _Bfree
0706688c 000000f4 T __multadd
07066980 00000110 T __s2b
07066a90 00000060 T __hi0bits
07066af0 0000009c T __lo0bits
07066b8c 000000a4 T __i2b
07066c30 00000204 T __multiply
07066e34 00000128 T __pow5mult
07066f5c 00000140 T __lshift
0706709c 00000058 T __mcmp
070670f4 000001fc T __mdiff
070672f0 00000068 T __ulp
07067358 000000d0 T __b2d
07067428 00000124 T __d2b
0706754c 00000078 T __ratio
070675c4 00000088 T __copybits
0706764c 0000005c T __any_on
070676a8 00000020 T asctime
070676c8 00000268 T gmtime_r
07067930 00000080 T asctime_r
070679b0 000004a0 T _realloc_r
07067e50 0000000c T __tz_lock
07067e5c 0000000c T __tz_unlock
07067e68 000002f8 T __utf8_mbtowc
07068160 000001b0 t _strtol_l.part.0
07068310 00000060 T _strtol_r
07068370 00000234 t _strtoll_l.isra.0
070685a4 00000030 T _strtoll_r
070685d4 00000008 T iswspace
070685dc 000000b4 T _mbrtowc_r
07068690 00000038 T iswspace_l
070686c8 00000188 T _wcsnrtombs_l
07068850 00000064 T _wcsnrtombs_r
070688b4 000000f0 T __sccl
070689a4 00000064 T siprintf
07068a08 000000a8 T __submore
07068ab0 00000090 T category
07068b40 0000005c T __assert_func
07068b9c 0000003c T fiprintf
07068bd8 0000064c t get_arg
07069224 00000030 T __sprint_r
07069254 00002304 T _vfiprintf_r
0706b558 000000b8 t __sbprintf
0706b610 00000138 T __swsetup_r
0706b748 000004b4 T __sfvwrite_r
0706bbfc 00000078 T _fstat_r
0706bc74 0000002c T __getreent
0706bca0 00000030 T _gettimeofday_r
0706bcd0 0000008c T __release_handle
0706bd5c 000000b0 T __alloc_handle
0706be0c 0000003c T __get_handle
0706be48 000000f4 T _close_r
0706bf3c 00000008 t null_write
0706bf44 000000c8 T FindDevice
0706c00c 00000028 T RemoveDevice
0706c034 0000009c T AddDevice
0706c0d0 00000008 T _isatty_r
0706c0d8 00000084 T _lseek_r
0706c15c 00000040 T nanosleep
0706c19c 00000080 T _read_r
0706c21c 00000078 W _sbrk_r
0706c294 0000001c T __libc_lock_acquire
0706c2b0 0000001c T __libc_lock_release
0706c2cc 0000001c T __libc_lock_acquire_recursive
0706c2e8 0000001c T __libc_lock_release_recursive
0706c304 00000080 T _write_r
0706c384 00000038 T __aeabi_d2lz
0706c384 00000038 T __fixdfdi
0706c3c0 00000040 T __aeabi_d2ulz
0706c3c0 00000040 T __fixunsdfdi
0706c400 T _fini
0706ebb0 00000038 R vtable for CTRPluginFramework::Search
0706ebe8 00000014 V vtable for CTRPluginFramework::MenuItem
0706ebfc 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0706ec18 00000a00 r font
0706f618 0000001c R vtable for CTRPluginFramework::Button
0706f638 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0706f640 00000058 r CTRPluginFramework::g_OSDPattern
0706f698 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0706f6b0 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
0706f6cc 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0706f6d4 00000004 R CTRPluginFramework::Color::SkyBlue
0706f6d8 00000004 R CTRPluginFramework::Color::Orange
0706f6dc 00000004 R CTRPluginFramework::Color::LimeGreen
0706f6e0 00000004 R CTRPluginFramework::Color::ForestGreen
0706f6e4 00000004 R CTRPluginFramework::Color::Gainsboro
0706f6e8 00000004 R CTRPluginFramework::Color::DimGrey
0706f6ec 00000004 R CTRPluginFramework::Color::DeepSkyBlue
0706f6f0 00000004 R CTRPluginFramework::Color::DarkGrey
0706f6f4 00000004 R CTRPluginFramework::Color::Brown
0706f6f8 00000004 R CTRPluginFramework::Color::BlackGrey
0706f6fc 00000004 R CTRPluginFramework::Color::Green
0706f700 00000004 R CTRPluginFramework::Color::Gray
0706f704 00000004 R CTRPluginFramework::Color::Silver
0706f708 00000004 R CTRPluginFramework::Color::Magenta
0706f70c 00000004 R CTRPluginFramework::Color::Cyan
0706f710 00000004 R CTRPluginFramework::Color::Yellow
0706f714 00000004 R CTRPluginFramework::Color::Blue
0706f718 00000004 R CTRPluginFramework::Color::Red
0706f71c 00000004 R CTRPluginFramework::Color::White
0706f720 00000004 R CTRPluginFramework::Color::Black
0706fd6c 00000014 r CTRPluginFramework::defaultSoundFiles
0706fd80 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0706fd94 00000038 r CTRPluginFramework::stable
0706fdcc 00000038 r CTRPluginFramework::ktable
0706fe04 00000023 r CTRPluginFramework::g_copyrightText
0706fe27 0000001e r CTRPluginFramework::g_ctrpfText
0706fe48 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
0706fe68 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
0706fe88 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
0706fea8 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0706feb0 0000001c R vtable for CTRPluginFramework::MenuEntryTools
0706fed0 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0706fed8 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0706fee0 0000001c R vtable for CTRPluginFramework::TouchKey
0706fefc 0000001c R vtable for CTRPluginFramework::ComboBox
0706ff18 0000001c R vtable for CTRPluginFramework::FloatingButton
0706ff34 0000001c R vtable for CTRPluginFramework::TextBox
0706ff50 0000001c R vtable for CTRPluginFramework::NumericTextBox
0706ff6c 00000040 r RegNames
0706ffac 00000010 r shift_names
0706ffbc 00000040 r cond_names
0706fffc 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
07070018 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07070020 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07070028 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07070030 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07070044 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07070050 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
070700d0 00000008 R CTRPluginFramework::Time::Zero
070700d8 00000384 r Settings15_array
0707045c 00000384 r UnCheckedCheckbox_array
070707e0 00000384 r Unsplash15_array
07070b64 000009c4 r Plus25_array
07071528 000009c4 r GameControllerFilled25_array
07071eec 00000384 r About15_array
07072270 000009c4 r Cut25_array
07072c34 00000640 r CloseWindow20_array
07073274 00000384 r Controller15_array
070735f8 00000384 r ClearSymbolFilled15_array
0707397c 000009c4 r ClipboardFilled25_array
07074340 00000384 r EnterKeyFilled15_array
070746c4 000009c4 r CutFilled25_array
07075088 00000e10 r DefaultKeyboardCustomIcon_array
07075e98 00000384 r Search15_array
0707621c 00000384 r CapsLockOn15_array
070765a0 000009c4 r TrashFilled25_array
07076f64 00000384 r RAM15_array
070772e8 00000384 r More15_array
0707766c 000009c4 r InfoFilled25_array
07078030 00000640 r CloseWindowFilled20_array
07078670 00000384 r HandCursor15_array
070789f4 000009c4 r AddFavoriteFilled25_array
070793b8 00000384 r EnterKey15_array
0707973c 000009c4 r Duplicate25_array
0707a100 00000384 r File15_array
0707a484 000009c4 r AddFavorite25_array
0707ae48 000009c4 r Edit25_array
0707b80c 000009c4 r DuplicateFilled25_array
0707c1d0 000009c4 r Save25_array
0707cb94 000009c4 r Clipboard25_array
0707d558 000009c4 r Info25_array
0707df1c 000009c4 r EditFilled25_array
0707e8e0 000009c4 r KeyboardFilled25_array
0707f2a4 000009c4 r PlusFilled25_array
0707fc68 00000384 r ClearSymbol15_array
0707ffec 00000384 r Shutdown15_array
07080370 00000384 r Maintenance15_array
070806f4 00000384 r CheckedCheckbox_array
07080a78 00000384 r Grid15_array
07080dfc 000009c4 r Keyboard25_array
070817c0 00000384 r CapsLockOnFilled15_array
07081b44 00000384 r UserManualFilled15_array
07081ec8 000009c4 r Trash25_array
0708288c 00000384 r GameController15_array
07082c10 00000384 r Star15_array
07082f94 000009c4 r GameController25_array
07083958 00001900 r Rocket40_array
07085258 00000384 r FolderFilled_array
070855dc 00000384 r Restart15_array
07085960 00000038 R vtable for CTRPluginFramework::Search32
07085998 0000004d r _net_error_code_map
070859e8 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
07085a10 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
07085a1c 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
07085a48 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
07085a54 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
07085a80 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
07085a8c 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
07085ab4 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
07085ac0 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
07085ad4 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
07085ae8 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
07085afc 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
07085b10 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07085b34 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07085b40 00000014 R vtable for __gnu_cxx::recursive_init_error
07085b54 00000001 R std::nothrow
07085b58 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
07085b80 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
07085b8c 0000002c R vtable for __cxxabiv1::__si_class_type_info
07085bb8 0000000d R typeinfo name for std::type_info
07085bc8 00000008 R typeinfo for std::type_info
07085bd0 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
07085be0 00000404 R std::__detail::__prime_list
07085fe4 00000018 V typeinfo name for std::_Sp_make_shared_tag
07085ffc 0000000d R typeinfo name for std::bad_alloc
0708600c 0000000c R typeinfo for std::bad_alloc
07086018 00000014 R vtable for std::bad_alloc
0708602c 00000019 R typeinfo name for std::bad_array_new_length
07086048 0000000c R typeinfo for std::bad_array_new_length
07086054 00000014 R vtable for std::bad_array_new_length
07086068 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0708608c 0000000c R typeinfo for __cxxabiv1::__class_type_info
07086098 0000002c R vtable for __cxxabiv1::__class_type_info
070860c4 0000000d R typeinfo name for std::exception
070860d4 00000008 R typeinfo for std::exception
070860dc 00000012 R typeinfo name for std::bad_exception
070860f0 0000000c R typeinfo for std::bad_exception
070860fc 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0708611c 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07086124 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
07086148 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07086150 00000014 R vtable for std::bad_exception
07086164 00000010 R typeinfo name for std::logic_error
07086174 0000000c R typeinfo for std::logic_error
07086180 00000015 R typeinfo name for std::invalid_argument
07086198 0000000c R typeinfo for std::invalid_argument
070861a4 00000011 R typeinfo name for std::length_error
070861b8 0000000c R typeinfo for std::length_error
070861c4 00000011 R typeinfo name for std::out_of_range
070861d8 0000000c R typeinfo for std::out_of_range
070861e4 00000014 R vtable for std::logic_error
070861f8 00000014 R vtable for std::invalid_argument
0708620c 00000014 R vtable for std::length_error
07086220 00000014 R vtable for std::out_of_range
07086238 00000890 R __log2_data
07086ac8 00000080 r npio2_hw
07086b48 00000108 r two_over_pi
07086c50 00000040 r PIo2
07086c90 00000010 r init_jk
07086ca0 00000101 R _ctype_
07086da4 00000010 r zeroes.0
07086db4 00000010 r blanks.1
07086dc4 00000014 r fpinan.0
07086dd8 00000014 r fpi.1
07086df0 00000028 r tinytens
07086e18 00000060 R __month_lengths
07086e78 000000fc R _C_time_locale
07086f74 00000010 r zeroes.0
07086f84 00000010 r blanks.1
07086f94 0000006c R __action_table
07087000 0000006c R __state_table
0708706c 00000100 R __chclass
0708716c 00000022 r basefix.0
07087190 00000100 R __hexdig
07087290 0000000c r p05.0
070872a0 00000028 R __mprec_bigtens
070872c8 000000c8 R __mprec_tens
07087390 00000024 r mon_name.0
070873b4 00000015 r day_name.1
070873cc 00003528 r categories
0708a8f4 00000010 r zeroes.0
0708a904 00000010 r blanks.1
0708a914 00000080 R dotab_stdnull
0708a994 R __tdata_align
0708aaf4 R __exidx_start
0708ad2c R __exidx_end
0708ad2c 00000004 D cwavCurrentVAPAConvCallback
0708ad30 00000018 D CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
0708ad48 00000018 D CTRPluginFramework::Screenshot::Path[abi:cxx11]
0708ad60 00000004 D CTRPluginFramework::Screenshot::Screens
0708ad64 00000004 D CTRPluginFramework::Screenshot::Hotkeys
0708ad68 00000001 D CTRPluginFramework::SystemImpl::Language
0708ad6c 00000004 D CTRPluginFramework::RendererPriv::g_customColor
0708ad70 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
0708ad74 00000018 D CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0708ad8c 00000018 D CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
0708ada4 00000018 D CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0708adbc 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
0708adc0 00000004 D CTRPluginFramework::FwkSettings::Header
0708adc4 00000001 D CTRPluginFramework::g_keepRunning
0708adc8 00000004 D g_charPerSheet
0708adcc 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
0708add0 00000018 D CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0708ade8 00000001 D CTRPluginFramework::EventManager::_refresh
0708adec 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
0708adf0 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
0708adf4 000001f4 D opcode_names
0708afe8 00000018 d CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708b000 00000004 D Settings15
0708b004 00000004 D UnCheckedCheckbox
0708b008 00000004 D Unsplash15
0708b00c 00000004 D Plus25
0708b010 00000004 D GameControllerFilled25
0708b014 00000004 D About15
0708b018 00000004 D Cut25
0708b01c 00000004 D CloseWindow20
0708b020 00000004 D Controller15
0708b024 00000004 D ClearSymbolFilled15
0708b028 00000004 D ClipboardFilled25
0708b02c 00000004 D EnterKeyFilled15
0708b030 00000004 D CutFilled25
0708b034 00000004 D DefaultKeyboardCustomIcon
0708b038 00000004 D Search15
0708b03c 00000004 D CapsLockOn15
0708b040 00000004 D TrashFilled25
0708b044 00000004 D RAM15
0708b048 00000004 D More15
0708b04c 00000004 D InfoFilled25
0708b050 00000004 D CloseWindowFilled20
0708b054 00000004 D HandCursor15
0708b058 00000004 D AddFavoriteFilled25
0708b05c 00000004 D EnterKey15
0708b060 00000004 D Duplicate25
0708b064 00000004 D File15
0708b068 00000004 D AddFavorite25
0708b06c 00000004 D Edit25
0708b070 00000004 D DuplicateFilled25
0708b074 00000004 D Save25
0708b078 00000004 D Clipboard25
0708b07c 00000004 D Info25
0708b080 00000004 D EditFilled25
0708b084 00000004 D KeyboardFilled25
0708b088 00000004 D PlusFilled25
0708b08c 00000004 D ClearSymbol15
0708b090 00000004 D Shutdown15
0708b094 00000004 D Maintenance15
0708b098 00000004 D CheckedCheckbox
0708b09c 00000004 D Grid15
0708b0a0 00000004 D Keyboard25
0708b0a4 00000004 D CapsLockOnFilled15
0708b0a8 00000004 D UserManualFilled15
0708b0ac 00000004 D Trash25
0708b0b0 00000004 D GameController15
0708b0b4 00000004 D Star15
0708b0b8 00000004 D GameController25
0708b0bc 00000004 D Rocket40
0708b0c0 00000004 D FolderFilled
0708b0c4 00000004 D Restart15
0708b0c8 00000004 d kCount
0708b0cc 00000004 d kInterval
0708b0d0 00000004 d kDelay
0708b0d4 00000080 d soc_devoptab
0708b154 00000004 D __cxxabiv1::__unexpected_handler
0708b158 00000004 D __cxxabiv1::__terminate_handler
0708b15c 00000004 D __malloc_sbrk_base
0708b160 00000004 D __malloc_trim_threshold
0708b168 00000408 D __malloc_av_
0708b570 0000000c D __sglue
0708b57c 00000008 D _tzname
0708b588 00000058 d tzinfo
0708b5e0 0000016c D __global_locale
0708b74c 00000004 D _impure_ptr
0708b750 00000120 D _impure_data
0708b870 00000004 D environ
0708b874 00001000 d handles
0708c874 0000000c d __stderr_handle
0708c880 0000000c d __stdout_handle
0708c88c 0000000c d __stdin_handle
0708c898 0000008c D devoptab_list
0708c924 00000004 d defaultDevice
0708c93c d _GLOBAL_OFFSET_TABLE_
0708c948 D __tdata_lma
0708c954 d __frame_dummy_init_array_entry
0708c954 D __init_array_start
0708c954 B __preinit_array_end
0708c954 B __preinit_array_start
0708c954 D __tdata_lma_end
0708c9bc d __do_global_dtors_aux_fini_array_entry
0708c9bc D __init_array_end
0708ca18 D __bss_start__
0708ca18 00000001 B SecureLock
0708ca1c 00000004 B ptmsysmHandle
0708ca20 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708ca2c 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
0708ca30 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
0708ca34 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708ca38 00000004 b ncsndMutex
0708ca3c 00000004 b ncsndCmdCurOff
0708ca40 00000004 b ncsndCmdStartOff
0708ca44 00000004 B ncsndSharedMem
0708ca48 00000004 B ncsndCSNDHandle
0708ca4c 00000004 b ncsndRefCount
0708ca50 00000004 B ncsndChannels
0708ca54 00000010 B ncsndOffsets
0708ca64 00000004 B ncsndSharedMemSize
0708ca68 00000004 b ncsndSharedMemBlock
0708ca6c 00000001 b ncsndCookieHooked
0708ca70 0000000c b ncsndCookie
0708ca7c b saved_stack
0708ca84 00000004 b cwavListCount
0708ca88 00000004 b cwavList
0708ca8c 00000004 b cwavAddedToList
0708ca90 b completed.1
0708ca94 b object.0
0708caac 00000004 b CTRPluginFramework::isReady
0708cab0 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708cab8 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708cac0 00000008 B CTRPluginFramework::Screenshot::_task
0708cac8 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
0708cad0 00000008 B CTRPluginFramework::Screenshot::_timer
0708cad8 00000004 B CTRPluginFramework::Screenshot::_display
0708cadc 00000004 B CTRPluginFramework::Screenshot::_filecount
0708cae0 00000004 B CTRPluginFramework::Screenshot::_mode
0708cae4 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
0708cae8 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
0708caf0 00000008 B CTRPluginFramework::Screenshot::Timer
0708caf8 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708cafc 00000008 b CTRPluginFramework::g_sleepEvent
0708cb04 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708cb08 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0708cb0c 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708cb10 00000001 B CTRPluginFramework::SystemImpl::IsCitra
0708cb11 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0708cb12 00000001 B _g_isCitra
0708cb14 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708cb18 00000004 B CTRPluginFramework::ScreenImpl::Top
0708cb1c 000000ac b CTRPluginFramework::_botBuf
0708cbc8 000000ac b CTRPluginFramework::_topBuf
0708cc74 00000004 B CTRPluginFramework::_pool
0708cc78 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708cc80 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708cc90 00000001 b CTRPluginFramework::g_progressLoop
0708cc94 00000004 b CTRPluginFramework::g_radioId
0708cc98 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708cc9c 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708cca0 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708ccac 00000028 B CTRPluginFramework::Window::TopWindow
0708ccd4 00000028 B CTRPluginFramework::Window::BottomWindow
0708ccfc 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708cd00 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0708cd08 00000050 b CTRPluginFramework::g_fpsCounter
0708cd58 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
0708cd60 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
0708cd68 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0708cd70 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708cd78 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0708cd80 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
0708cd81 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
0708cd82 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708cd84 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
0708cda4 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
0708cdb0 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0708cdbc 0000000c B CTRPluginFramework::OSDImpl::Notifications
0708cdc8 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0708cdec 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708cdf8 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0708ce10 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0708ce28 00000004 B CTRPluginFramework::OSDImpl::OSDHook
0708ce2c 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0708ce30 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708ce34 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708ce35 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0708ce36 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0708ce38 000000a8 B CTRPluginFramework::Preferences::Settings
0708cee0 00000008 B CTRPluginFramework::Preferences::Backlights
0708cee8 00000008 B CTRPluginFramework::Preferences::Flags
0708cef0 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0708cef4 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0708cef8 000009c4 b CTRPluginFramework::g_rng
0708d8bc 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
0708d8c0 00000004 B CTRPluginFramework::Process::OnPauseResume
0708d8c4 00000004 B CTRPluginFramework::Process::exceptionCallback
0708d8c8 00000004 B CTRPluginFramework::System::OnAbort
0708d8cc 00000004 B CTRPluginFramework::Controller::_keysReleased
0708d8d0 00000004 B CTRPluginFramework::Controller::_keysHeld
0708d8d4 00000004 B CTRPluginFramework::Controller::_keysDown
0708d8d8 00000004 b CTRPluginFramework::g_runningInstance
0708d8dc 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708d8e0 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708d8e4 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708d8e6 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708d8e8 0000001c b CTRPluginFramework::g_dummy
0708d904 00000180 b CTRPluginFramework::g_keyName
0708da84 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
0708daa0 00000004 b g_onLoadCroLock
0708daa4 00000004 b g_onSharedMemMapHook
0708daa8 00000004 b g_onLoadCroHook
0708daac 00000008 b CTRPluginFramework::g_mainThread
0708dab4 00000004 B CTRPluginFramework::g_keepEvent
0708dab8 00000004 B CTRPluginFramework::g_keepThreadHandle
0708dabc 00000004 B CTRPluginFramework::g_continueGameEvent
0708dac0 00000008 B CTRPluginFramework::_sdmcArchive
0708dac8 00001000 b CTRPluginFramework::keepThreadStack
0708eac8 00000004 b g_mainThreadVars
0708eacc 00000001 b properInit
0708eacd 00000001 b fakeInit
0708ead0 00000004 b plgLdrRefCount
0708ead4 00000004 b plgReply
0708ead8 00000004 b plgEvent
0708eadc 00000004 b plgLdrArbiter
0708eae0 00000004 b plgLdrHandle
0708eae4 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
0708eae8 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
0708eaec 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
0708eaf4 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
0708eafc 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
0708eb00 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
0708eb08 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
0708eb10 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
0708eb18 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
0708eb1c 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
0708eb20 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
0708eb24 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
0708eb28 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
0708eb2c 0000001c B CTRPluginFramework::HookManager::_singleton
0708eb48 000000a8 B CTRPluginFramework::Scheduler::_singleton
0708ebf0 00000008 b CTRPluginFramework::Heap::g_heapPool
0708ebf8 0000000c b CTRPluginFramework::Heap::_mutex
0708ec04 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708ec08 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0708ec0c 0000000c b sAddrMap
0708ec18 0000000c B CTRPluginFramework::FSPath::FSMutex
0708ec24 00000044 b CTRPluginFramework::g_previousException
0708ec68 00000004 B CTRPluginFramework::ProcessImpl::processEventCallback
0708ec6c 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
0708ec70 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
0708ec78 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708ec84 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708ec90 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708eca0 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
0708eca4 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708ed08 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708ed0c 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708ed10 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708ed18 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708ed1c 00000004 B CTRPluginFramework::ProcessImpl::Status
0708ed20 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708ed24 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708ed28 00000004 B CTRPluginFramework::EventManager::_firstTouch
0708ed2c 00000001 B CTRPluginFramework::EventManager::_isTouching
0708ed30 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
0708ed34 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
0708ed40 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708ed44 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
0708ed50 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708ed54 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708ed58 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708ed5c 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708ed60 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708ed68 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708ed70 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708ed78 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708ed80 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708ed84 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708ed8c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708ed90 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708ed98 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
0708ed9c 00000004 b CTRPluginFramework::g_screenshotEntry
0708eda0 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708eda4 00000004 b CTRPluginFramework::g_OpenFileLock
0708eda8 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708edb0 00000040 b CTRPluginFramework::g_hookExportFile
0708edf0 00000004 b CTRPluginFramework::g_HookMode
0708edf4 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
0708edf8 00000008 b CTRPluginFramework::g_textXpos
0708ee00 00000004 b CTRPluginFramework::g_mode
0708ee04 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0708ee08 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0708ee18 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708ee1c 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708ee2c 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708ee30 00000004 B CTRPluginFramework::__g_hexEditor
0708ee34 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708ee38 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708ee48 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
0708ee4c 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708ee50 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708ee58 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708ee60 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708ee64 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708ee74 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708ee78 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708ee80 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708ee84 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708ee94 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708ee98 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708eea8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708eeac 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708eebc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708eec0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708eed0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708eed4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708eee4 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708eef0 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708eefc 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708ef08 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708ef0c 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708ef14 00000004 b CTRPluginFramework::__pmARinstance
0708ef18 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708ef1c 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708ef2c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708ef30 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708ef40 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
0708ef50 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
0708ef6c 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
0708ef70 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
0708ef74 0000000c B CTRPluginFramework::Font::_mutex
0708ef80 00000004 B CTRPluginFramework::g_glyphAllocated
0708ef84 00000004 B CTRPluginFramework::g_fontAllocated
0708ef88 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
0708ef90 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
0708ef91 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
0708ef94 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
0708efa0 0000000c B CTRPluginFramework::g_codeTypes
0708efac 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708efb0 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708efbc 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708efc0 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708efcc 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708efcd 00000001 b CTRPluginFramework::g_newCondDataToggle
0708efce 00000001 b CTRPluginFramework::g_condAgainstData
0708efd0 00000004 b CTRPluginFramework::__arCodeEditor
0708efd4 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708efd8 00000018 b __threads
0708eff0 0000000c b __mutex
0708effc 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708f000 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708f008 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708f010 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708f018 00000004 b CTRPluginFramework::__converter
0708f01c 00000004 b CTRPluginFramework::g_context
0708f020 00000001 b CTRPluginFramework::ToggleFloat
0708f021 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708f024 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708f028 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708f02c 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708f030 00000008 B CTRPluginFramework::ARHandler::Storage
0708f038 00000010 B CTRPluginFramework::ARHandler::Data
0708f048 00000008 B CTRPluginFramework::ARHandler::Offset
0708f050 00000fa0 b CTRPluginFramework::arStack
0708fff0 00000004 b arbiter
0708fff4 00000004 b sharedFontAddr
0708fff8 00000004 B g_sharedFont
0708fffc 00000004 b srvRefCount
07090000 00000004 b srvHandle
07090004 00000004 b currentAddr
07090008 00000004 b maxAddr
0709000c 00000004 b minAddr
07090010 00000004 b cfguRefCount
07090014 00000004 b cfguHandle
07090018 00000001 b gspRunEvents
0709001c 00000004 b gspEventThread
07090020 00000004 b gspEvent
07090024 00000001 b gspGpuRight
07090028 00000004 b gspSharedMem
0709002c 00000004 b gspSharedMemHandle
07090030 00000004 b gspRefCount
07090034 00000004 b gspGpuHandle
07090038 00000001 b usingIrrst
0709003c 00000004 b hidRefCount
07090040 00000006 b gRate
07090048 00000006 b aVec
07090050 00000004 b cPos
07090054 00000004 b tPos
07090058 00000004 b kRepeat
0709005c 00000004 b kUp
07090060 00000004 b kDown
07090064 00000004 b kHeld
07090068 00000004 b kOld
0709006c 00000004 B hidSharedMem
07090070 00000014 B hidEvents
07090084 00000004 B hidMemHandle
07090088 00000004 B hidHandle
0709008c 00000004 b acRefCount
07090090 00000004 b acHandle
07090094 00000004 b amRefCount
07090098 00000004 b amHandle
0709009c 00000004 b __sslc_refcount
070900a0 00000004 B __sslc_servhandle
070900a4 00000001 b flagValue.0
070900a5 00000001 b flagInit.1
070900a8 00000004 b serviceName.6
070900ac 0000000c b aptFirstHook
070900b8 00000004 b aptLockHandle
070900bc 00000004 b micSharedMemHandle
070900c0 00000004 b micSharedMemSize
070900c4 00000004 b micSharedMem
070900c8 00000004 b micRefCount
070900cc 00000004 b micHandle
070900d0 00000004 b srvPmHandle
070900d8 00000080 b fsExemptArchives
07090158 00000004 b fsuRefCount
0709015c 00000004 b fsuHandle
07090160 00000004 B socMemhandle
07090164 00000004 B SOCU_handle
07090168 00000004 V __ctru_heap_size
0709016c 00000004 B __ctru_linear_heap
07090170 00000004 B __ctru_heap
07090174 00000004 b irrstRefCount
07090178 00000004 b csPos
0709017c 00000004 b kHeld
07090180 00000004 B irrstSharedMem
07090184 00000004 B irrstEvent
07090188 00000004 B irrstMemHandle
0709018c 00000004 B irrstHandle
07090190 00000004 b (anonymous namespace)::get_static_cond()::once
07090198 00000008 b (anonymous namespace)::fake_cond
070901a0 00000004 b (anonymous namespace)::static_cond
070901a4 00000004 b (anonymous namespace)::get_static_mutex()::once
070901a8 00000010 b (anonymous namespace)::fake_mutex
070901b8 00000004 b (anonymous namespace)::static_mutex
070901bc 00000004 b (anonymous namespace)::__new_handler
070901c0 0000001c b (anonymous namespace)::emergency_pool
070901dc 00000004 b init
070901e0 00000001 B __eh_globals_init::_S_init
070901e4 0000000c b (anonymous namespace)::eh_globals
070901f0 00000010 V std::string::_Rep::_S_empty_rep_storage
07090200 00000028 B __malloc_current_mallinfo
07090228 00000004 B __malloc_max_total_mem
0709022c 00000004 B __malloc_max_sbrked_mem
07090230 00000004 B __malloc_top_pad
07090234 0000000c b __malloc_recursive_mutex
07090240 0000000c b __sfp_recursive_mutex
07090250 00000168 B __sf
070903b8 00000004 B __stdio_exit_handler
070903bc 00000004 b prev_tzenv
070903c0 0000000c b __tzname_dst
070903cc 0000000c b __tzname_std
070903d8 00000004 B _timezone
070903dc 00000004 B _daylight
070903e0 00000190 B __atexit0
07090570 00000004 B __atexit
07090574 0000000c B __atexit_recursive_mutex
07090580 00000004 b initial_env
07090584 0000000c b __env_recursive_mutex
07090590 00000004 b __tz_mutex
07090594 00000004 b __hndl_lock
07090598 00000004 B fake_heap_start
0709059c 00000004 B fake_heap_end
070905a0 00000004 b heap_start.0
070905a4 B __tls_start
070905d0 B __bss_end__
070905d0 A __end__
070905d0 B __tls_end
